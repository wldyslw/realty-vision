/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./models/city.gltf -tk
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Plane: THREE.Mesh;
        Plane_1: THREE.Mesh;
        Building_Ref: THREE.Mesh;
    };
    materials: {
        ['Default Material']: THREE.MeshStandardMaterial;
        ['Transparent Material']: THREE.MeshStandardMaterial;
    };
};

export function Model(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF('/city.gltf') as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh
                visible={false}
                name="Building_Ref"
                geometry={nodes.Building_Ref.geometry}
                material={materials['Transparent Material']}
                position={[0, 5, -600]}
            />
            <mesh
                receiveShadow
                name="Plane"
                geometry={nodes.Plane.geometry}
                material={materials['Default Material']}
            />
            <mesh
                receiveShadow
                name="Plane_1"
                geometry={nodes.Plane_1.geometry}
                material={materials['Transparent Material']}
            />
        </group>
    );
}

useGLTF.preload('/city.gltf');
